[{"name":"fun List<Pair<Double, Double>>.simplify(tolerance: Double = 1.0, highestQuality: Boolean = false): List<Pair<Double, Double>>","description":"dev.jamesyox.simplifyk.simplify","location":"simplify-k/dev.jamesyox.simplifyk/simplify.html","searchKeys":["simplify","fun List<Pair<Double, Double>>.simplify(tolerance: Double = 1.0, highestQuality: Boolean = false): List<Pair<Double, Double>>","dev.jamesyox.simplifyk.simplify"]},{"name":"inline fun <T> List<T>.radialDistance(tolerance: Double, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","description":"dev.jamesyox.simplifyk.simplifications.radialDistance","location":"simplify-k/dev.jamesyox.simplifyk.simplifications/radial-distance.html","searchKeys":["radialDistance","inline fun <T> List<T>.radialDistance(tolerance: Double, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","dev.jamesyox.simplifyk.simplifications.radialDistance"]},{"name":"inline fun <T> List<T>.ramerDouglasPeucker(epsilon: Double, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","description":"dev.jamesyox.simplifyk.simplifications.ramerDouglasPeucker","location":"simplify-k/dev.jamesyox.simplifyk.simplifications/ramer-douglas-peucker.html","searchKeys":["ramerDouglasPeucker","inline fun <T> List<T>.ramerDouglasPeucker(epsilon: Double, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","dev.jamesyox.simplifyk.simplifications.ramerDouglasPeucker"]},{"name":"inline fun <T> List<T>.simplify(tolerance: Double = 1.0, highestQuality: Boolean = false, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","description":"dev.jamesyox.simplifyk.simplify","location":"simplify-k/dev.jamesyox.simplifyk/simplify.html","searchKeys":["simplify","inline fun <T> List<T>.simplify(tolerance: Double = 1.0, highestQuality: Boolean = false, crossinline xExtractor: (T) -> Double, crossinline yExtractor: (T) -> Double, crossinline xTransformer: (Double) -> Double = { it }, crossinline yTransformer: (Double) -> Double = { it }): List<T>","dev.jamesyox.simplifyk.simplify"]}]
